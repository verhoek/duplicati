language: minimal
services: docker
before_install:
  - sudo apt-get install moreutils
  - set -o pipefail
addons:
  coverity_scan:
    project:
      name: "duplicati/duplicati"
      description: "Duplicati Build submitted via Travis CI"
    notification_email: kenneth@duplicati.com
    build_command_prepend: "msbuild /t:Clean"
    build_command: "msbuild /t:Rebuild"
    branch_pattern: coverity_scan
env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    #   via the "travis encrypt" command using the project repo's public key
    - secure: "ijaQDcVcMo/utuP514FiDZVGR5LJbATWmYDmgRIIaI0YG2Rk6uuJp9XXDXr8sx66JWttPGgs7Htqfy50VKHdr7nsfyCQCRNGmqF+OJeUgAQMj5spxn9A7PZY9+GVhnXoJ06wvYjCv5MPeLBMDK/KpIM5Ny5IG+TKzQy4U7Dyg0riMUT61aqzxSjTGfHZPmaqBICJTzsRmeGHglemFUz/1B4NAN+IeAtXoH9YIfA2LjJfYmMLckPgFQLKN/tQRaGPWXh77y0qVgA++K8UVu5W3yGo3JXBPDdabGgKs9BPlfN5/Ixnkcy6ekAubDA/Aspur9x7/szj4/AnGMY6frNB33nQcnJQZ/51GYKr6CXCmjoJQuWc8ZKdEMqDn3w/kyEzvluSjAsJNRVboeWPE4VfpAeUBsjQ+TuEQi8WXhN8VJgZV7yCkVlZTVbhtOxMPsBiFb74lpWC2iQuWLJv9ED6vyXZVzZhNtfjXNXNZzIwYxbcd7I0ZQ8fmDstFnvBJveJby2ZRpECXTbc03eIUq1SAaVJJY2r47RD1PwVqM3xvUTljIqtKdyIz915mEOjqG1BnCDaiGHYJ4byuDDeIUZO9X70s60Gh4hupZA2Ruup0v7SfYgkto6aNcStd0NYd716Vd7hqXNTp6nu01L5YYJDY4h5sHyBXVXbxCKlUb01kUw="
    - USAGEREPORTER_Duplicati_LEVEL=none
    - AUTOUPDATER_Duplicati_SKIP_UPDATE=1
    - TMPDIR=$HOME/tmp
cache:
  directories:
    # There is one cache per branch, so concurrent builds on different branches possible!
    # DO NOT SET ENVIRONMENT VARIABLES WITHIN JOBS, OR CACHES WILL NOT BE SHARED AMONGST JOBS!
    - ${TRAVIS_BUILD_DIR}/../.duplicati_build_cache
    - ${TRAVIS_BUILD_DIR}/../.duplicati_zip_cache
    - $HOME/download/

# matrix expansion within jobs would be good:
# https://github.com/travis-ci/travis-ci/issues/8295
jobs:
  include:
    - stage: build
    # DO NOT SET ENVIRONMENT VARIABLES WITHIN JOBS, OR CACHES WILL NOT BE SHARED AMONGST JOBS!
      script:
          - ./BuildTools/PipeLine/stage_build/wrapper.sh | ts
    - stage: unit tests
      script:
        - ./BuildTools/PipeLine/stage_unittests/wrapper.sh --testcategories BulkNormal --testdata data.zip | ts
    - stage: unit tests
      script:
        - ./BuildTools/PipeLine/stage_unittests/wrapper.sh --testcategories BulkNoSize --testdata data.zip | ts
    - stage: unit tests
      script:
        - ./BuildTools/PipeLine/stage_unittests/wrapper.sh --testcategories SVNDataLong,SVNData --testdata DSMCBE.zip |  ts
    - stage: unit tests
      script:
        - ./BuildTools/PipeLine/stage_unittests/wrapper.sh --testcategories Border | ts
    - stage: unit tests
      script:
        - ./BuildTools/PipeLine/stage_unittests/wrapper.sh --testcategories Filter,Targeted,Purge,Serialization,WebApi,Utility,UriUtility,IO | ts
    # - stage: integration tests
    #   script:
    #     - ./BuildTools/PipeLine/integrationtest/wrapper.sh --cache "$BUILD_CACHE"
    #   addons:
    #     sauce_connect:
    #       username: $SAUCE_USERNAME
    #       access_key: $SAUCE_ACCESS_KEY
    - stage: create archive
      script:
        - ./BuildTools/PipeLine/stage_createarchive/wrapper.sh | ts
    - stage: create installers
      script:
        - ./BuildTools/PipeLine/stage_createinstallers/wrapper.sh --installers debian | ts
    - stage: create installers
      script:
        - ./BuildTools/PipeLine/stage_createinstallers/wrapper.sh --installers fedora | ts
    - stage: create installers
      script:
        - ./BuildTools/PipeLine/stage_createinstallers/wrapper.sh --installers synology | ts
    - stage: create installers
      script:
        - ./BuildTools/PipeLine/stage_createinstallers/wrapper.sh --installers docker | ts
    - stage: deploy to aws
      script:
        - ./BuildTools/PipeLine/stage_deploy/wrapper.sh --awskeyid $AWS_ACCESS_KEY_ID --awssecret $AWS_SECRET_ACCESS_KEY --awsbucket $AWS_BUCKET_URI | ts
